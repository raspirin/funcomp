// expr
expr      = !{ factor ~ ((plus | minus) ~ factor)* }
factor    = !{ unary ~ ((asterisk | slash) ~ unary)* }
unary     = !{ (minus | plus) ~ unary | call | primary }
call      = !{ primary ~ "(" ~ arguments* ~ ")" }
primary   =  { number | grouping | ident }
arguments =  { expr ~ ("," ~ expr)* }
grouping  = !{ "(" ~ expr ~ ")" }

// operator
plus     = { "+" }
minus    = { "-" }
asterisk = { "*" }
slash    = { "/" }

// atomic
number = @{ ASCII_DIGIT+ ~ ("." ~ ASCII_DIGIT+)? }
ident  = @{ ASCII_ALPHA ~ ASCII_ALPHANUMERIC* }

// whitespace
WHITESPACE = _{ " " }
